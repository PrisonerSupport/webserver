{"/Users/ezragoss/Projects/prisonersupport/webserver/test/servers/auth/db_utils.test.ts":{"path":"/Users/ezragoss/Projects/prisonersupport/webserver/test/servers/auth/db_utils.test.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":0},"end":{"line":20,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":13,"column":7}},"6":{"start":{"line":8,"column":8},"end":{"line":12,"column":11}},"7":{"start":{"line":9,"column":12},"end":{"line":9,"column":65}},"8":{"start":{"line":10,"column":23},"end":{"line":10,"column":60}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":95}},"10":{"start":{"line":14,"column":4},"end":{"line":19,"column":7}},"11":{"start":{"line":15,"column":8},"end":{"line":18,"column":11}},"12":{"start":{"line":16,"column":12},"end":{"line":16,"column":72}},"13":{"start":{"line":17,"column":12},"end":{"line":17,"column":78}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":57},"end":{"line":6,"column":58}},"loc":{"start":{"line":6,"column":69},"end":{"line":20,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":39},"end":{"line":7,"column":40}},"loc":{"start":{"line":7,"column":51},"end":{"line":13,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":35},"end":{"line":8,"column":36}},"loc":{"start":{"line":8,"column":47},"end":{"line":12,"column":9}},"line":8},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":44},"end":{"line":14,"column":45}},"loc":{"start":{"line":14,"column":56},"end":{"line":19,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":59},"end":{"line":15,"column":60}},"loc":{"start":{"line":15,"column":71},"end":{"line":18,"column":9}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/ezragoss/Projects/prisonersupport/webserver/test/servers/auth/db_utils.test.ts","sources":["/Users/ezragoss/Projects/prisonersupport/webserver/test/servers/auth/db_utils.test.ts"],"names":[],"mappings":";;AAAA,iEAAiG;AACjG,iCAAoC;AACpC,+BAA6B;AAG7B,gBAAQ,CAAC,sCAAsC,EAAE;IAC7C,gBAAQ,CAAC,gBAAgB,EAAE;QACvB,UAAE,CAAC,cAAc,EAAE;YACf,qBAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC1C,IAAI,IAAI,GAAG,4BAAiB,CAAC,OAAO,CAAC,CAAA;YACrC,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,uCAAuC,CAAC,CAAA;QAC/E,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,gBAAQ,CAAC,qBAAqB,EAAE;QAC5B,UAAE,CAAC,sCAAsC,EAAE;YACvC,aAAM,CAAC,uBAAY,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAA;YACzC,aAAM,CAAC,CAAC,uBAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAA;QACnD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { authenticate, insertUser, getUserByUsername } from '../../../src/servers/auth/db_utils';\nimport { describe, it } from 'mocha'\nimport { expect } from 'chai'\n\n\ndescribe('Authentication database interactions', function() {\n    describe('User insertion', function () {\n        it('inserts user', function () {\n            insertUser('user1', 'User 1', 'password');\n            var user = getUserByUsername('user1')\n            expect(user.name).equals('User 1', 'Name of inserted entry does not match')\n        });\n    });\n\n    describe('User authentication', function() {\n        it('authenticates the password of a user', function () {\n            expect(authenticate('user1', 'password'))\n            expect(!authenticate('user1', 'wrongpassword'))\n        });\n    });\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b8a31f4e18341bc540727c926a0fdc694443de8b","contentHash":"13e162a07be1b691af6648ef1f0a77222509e84f5d827206c7847bfb4d8f424c"},"/Users/ezragoss/Projects/prisonersupport/webserver/src/servers/auth/db_utils.ts":{"path":"/Users/ezragoss/Projects/prisonersupport/webserver/src/servers/auth/db_utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":31}},"5":{"start":{"line":8,"column":4},"end":{"line":12,"column":7}},"6":{"start":{"line":9,"column":8},"end":{"line":10,"column":22}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":22}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},"9":{"start":{"line":13,"column":4},"end":{"line":17,"column":6}},"10":{"start":{"line":20,"column":15},"end":{"line":20,"column":61}},"11":{"start":{"line":20,"column":43},"end":{"line":20,"column":60}},"12":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":42}},"14":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":97}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":19}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":46}},"18":{"start":{"line":31,"column":15},"end":{"line":31,"column":36}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":25}},"20":{"start":{"line":35,"column":4},"end":{"line":40,"column":5}},"21":{"start":{"line":36,"column":23},"end":{"line":36,"column":51}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":18}},"23":{"start":{"line":41,"column":15},"end":{"line":41,"column":28}},"24":{"start":{"line":42,"column":21},"end":{"line":42,"column":40}},"25":{"start":{"line":43,"column":15},"end":{"line":43,"column":55}},"26":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"29":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}},"30":{"start":{"line":51,"column":4},"end":{"line":62,"column":5}},"31":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"32":{"start":{"line":53,"column":8},"end":{"line":53,"column":47}},"33":{"start":{"line":56,"column":19},"end":{"line":60,"column":9}},"34":{"start":{"line":61,"column":8},"end":{"line":61,"column":22}},"35":{"start":{"line":64,"column":0},"end":{"line":64,"column":32}},"36":{"start":{"line":65,"column":9},"end":{"line":65,"column":11}}},"fnMap":{"0":{"name":"_hashAndSalt","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":113},"end":{"line":18,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":62},"end":{"line":8,"column":63}},"loc":{"start":{"line":8,"column":83},"end":{"line":12,"column":5}},"line":8},"2":{"name":"getUserByUsername","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":26}},"loc":{"start":{"line":19,"column":31},"end":{"line":28,"column":1}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":35},"end":{"line":20,"column":36}},"loc":{"start":{"line":20,"column":43},"end":{"line":20,"column":60}},"line":20},"4":{"name":"_getUserPasswordById","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":29}},"loc":{"start":{"line":30,"column":34},"end":{"line":33,"column":1}},"line":30},"5":{"name":"authenticate","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":21}},"loc":{"start":{"line":34,"column":40},"end":{"line":48,"column":1}},"line":34},"6":{"name":"insertUser","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":19}},"loc":{"start":{"line":50,"column":44},"end":{"line":63,"column":1}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":63}},"type":"default-arg","locations":[{"start":{"line":6,"column":39},"end":{"line":6,"column":63}}],"line":6},"1":{"loc":{"start":{"line":6,"column":65},"end":{"line":6,"column":111}},"type":"default-arg","locations":[{"start":{"line":6,"column":78},"end":{"line":6,"column":111}}],"line":6},"2":{"loc":{"start":{"line":9,"column":8},"end":{"line":10,"column":22}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":10,"column":22}},{"start":{"line":9,"column":8},"end":{"line":10,"column":22}}],"line":9},"3":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":4},"end":{"line":23,"column":5}}],"line":21},"4":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{"line":24,"column":4},"end":{"line":26,"column":5}}],"line":24},"5":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{"line":44,"column":4},"end":{"line":46,"column":5}}],"line":44}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":3,"7":0,"8":3,"9":3,"10":4,"11":3,"12":4,"13":1,"14":3,"15":0,"16":3,"17":1,"18":2,"19":2,"20":2,"21":2,"22":0,"23":2,"24":2,"25":2,"26":2,"27":0,"28":2,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":1},"f":{"0":3,"1":3,"2":4,"3":3,"4":2,"5":2,"6":1},"b":{"0":[1],"1":[1],"2":[0,3],"3":[1,3],"4":[0,3],"5":[0,2]},"inputSourceMap":{"version":3,"file":"/Users/ezragoss/Projects/prisonersupport/webserver/src/servers/auth/db_utils.ts","sources":["/Users/ezragoss/Projects/prisonersupport/webserver/src/servers/auth/db_utils.ts"],"names":[],"mappings":";;;AAKA,mCAAoE;AACpE,mCAAgC;AAgBhC,SAAS,YAAY,CAAC,QAAe,EAAE,OAAgB,oBAAW,CAAC,EAAE,CAAC,EAAE,aAAkB,kBAAS,CAAC,KAAK,EAAC,MAAM,CAAC;IAC7G,IAAI,IAAI,GAAW,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;IACnC,eAAM,CACF,QAAQ,EACR,IAAI,EACJ,UAAU,EACV,EAAE,EACF,QAAQ,EACR,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE;QAChB,IAAI,GAAG;YAAE,MAAM,GAAG,CAAA;QAClB,IAAI,GAAG,UAAU,CAAA;IACrB,CAAC,CACJ,CAAC;IAEF,OAAO;QACH,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;QACZ,YAAY,EAAE,UAAU;KAC3B,CAAA;AACL,CAAC;AAKD,SAAS,iBAAiB,CAAC,EAAS;IAChC,IAAI,IAAI,GAAG,eAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;IAEjD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KACrC;IAED,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;KAC5F;IAED,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC;AAmDkC,8CAAiB;AAjDpD,SAAS,oBAAoB,CAAC,EAAS;IACnC,IAAI,IAAI,GAAG,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAEjC,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,CAAC;AAED,SAAS,YAAY,CAAC,MAAa,EAAE,QAAe;IAChD,IAAI;QACA,IAAI,QAAQ,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAA;KAC9C;IACD,OAAO,GAAG,EAAE;QAER,MAAM,GAAG,CAAA;KACZ;IAGD,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAA;IACxB,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAA;IACpC,IAAI,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,CAAA;IAEnD,IAAI,IAAI,IAAI,QAAQ,EAAE;QAClB,OAAO,IAAI,CAAA;KACd;IAED,OAAO,KAAK,CAAA;AAChB,CAAC;AAwBQ,oCAAY;AAtBrB,SAAS,UAAU,CAAC,MAAa,EAAE,IAAW,EAAE,QAAe;IAC3D,IAAI;QAEA,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAE1B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;KACzC;IAAC,OAAO,GAAG,EAAE;QAEV,IAAI,IAAI,GAAG;YACP,QAAQ,EAAE,MAAM;YAChB,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,YAAY,CAAC,QAAQ,CAAC;SACrC,CAAA;QACD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAChB;AACL,CAAC;AAOsB,gCAAU;AAHjC,IAAI,EAAE,GAAW,EAChB,CAAA","sourcesContent":["/**\n * FIXME: CURRENTLY USING DUMMY PLAINTEXT DB\n * \n */\n\nimport { BinaryLike, pbkdf2, randomBytes, randomInt } from 'crypto';\nimport { filter } from 'lodash';\n\n\n// ---- TYPE INTERFACES ----\ninterface User {\n    'userId': string,\n    'name': string,\n    'password': {\n        'hash': BinaryLike,\n        'salt': BinaryLike,\n        'iterations': number\n    }\n}\n\n// ---- HASHING LOGIC ----\n\nfunction _hashAndSalt(password:string, salt:BinaryLike=randomBytes(16), iterations:number=randomInt(80000,100000)) {\n    var hash: Buffer = Buffer.alloc(32)  // Allocate default buffer, TODO: this feels janky\n    pbkdf2(\n        password,\n        salt,\n        iterations,\n        32,\n        'sha256',\n        (err, derivedKey) => {\n            if (err) throw err\n            hash = derivedKey\n        }\n    );\n    // Return a dictionary of attributes for storage in db\n    return {\n        'hash': hash,\n        'salt': salt,\n        'iterations': iterations\n    }\n}\n\n// ---- DB QUERY TOOLS ----\n// TODO: These are just fillers for testing, need to replace with actual DB and its logic\n\nfunction getUserByUsername(id:string) {\n    var user = filter(db, user => user.userId == id);\n\n    if (user.length == 0) {\n        throw new Error(\"User not found\");\n    }\n\n    if (user.length > 1) {\n        throw new Error(\"More than one user found for that ID, please check DB insertion logic\");\n    }\n\n    return user[0];  // Should only be one user in array\n}\n\nfunction _getUserPasswordById(id:string) {\n    var user = getUserByUsername(id);\n\n    return user.password;\n}\n\nfunction authenticate(userId:string, password:string) {\n    try {\n        var expected = _getUserPasswordById(userId)\n    }\n    catch (err) {\n        // Something went wrong, just pass up the error\n        throw err\n    }\n    \n    // Use the same salt and iteration count that the user originally used to retrieve the same hash\n    var salt = expected.salt\n    var iterations = expected.iterations\n    var hash = _hashAndSalt(password, salt, iterations)\n    \n    if (hash == expected) {\n        return true\n    }\n\n    return false\n}\n\nfunction insertUser(userId:string, name:string, password:string) {\n    try {\n        // Check if the user exists\n        getUserByUsername(userId);\n        // If user exists then throw back an error\n        throw new Error(\"User already exists\")\n    } catch (err) {\n        // User doesn't exist, generate hash and insert\n        var user = {\n            'userId': userId,\n            'name': name,\n            'password': _hashAndSalt(password)\n        }\n        db.push(user)\n    }\n}\n\n// TODO: This is just a dummy plaintext DB and needs to be removed once real DB is set up\n\nvar db: User[] = [\n]\n\nexport { authenticate, insertUser, getUserByUsername };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc04bc225d2631a889a5988c248bff001258ddd3","contentHash":"fa475f479f41e6c7604af0ee7431d9cb22e707542fcfcddd39a991c855894671"}}